"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("ethers"),t=require("@walletconnect/web3-provider");function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function r(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var r=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,r.get?r:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var a=r(e),s=n(t);const i=require("ethers");class o{constructor(e,t){this.web3Provider=t,this.originProvider=e,this.signer=t.getSigner()}async queryContract(e,t,n,...r){return new i.Contract(e,t,this.web3Provider).functions[n](...r)}async runContractTransactionFunc(e,t,n,...r){return new i.Contract(e,t,this.web3Provider.getSigner()).functions[n](...r)}listenForChanges(e,t=(()=>{})){if(!e)throw new Error("This listener item cannot be empty.");if(-1===["chainChanged","accountsChanged","disconnect"].indexOf(e))throw new Error("This listener item does not exist.");try{this.originProvider.on(e,t)}catch(e){console.log("Listen to error."),console.log(e)}}async signMessage(e,t){return await this.originProvider.request({method:"eth_sign",params:[t,e]})}async personalSign(e,t){return this.originProvider.request({method:"personal_sign",params:[e,t],from:t})}formatUnits(e,t){return i.utils.formatUnits(e,t)}}const c=[{id:"ETH-Testnet",name:"ETH Testnet",label:"EHT Rinkeby Testnet",chainId:"0x4",url:"https://ropsten.infura.io/v3/a892bade64884ad6a13cf9981de659eb",explorer:"https://ropsten.etherscan.io/",config:{chainId:"0x4",chainName:"ETH Testnet",nativeCurrency:{name:"ETH",symbol:"ETH",decimals:18},rpcUrls:["https://ropsten.infura.io/v3/a892bade64884ad6a13cf9981de659eb"],blockExplorerUrls:["https://ropsten.etherscan.io/"]}},{id:"BSC-Testnet",name:"BSC Testnet",chainId:"0x61",label:"BSC Testnet",url:"https://data-seed-prebsc-2-s3.binance.org:8545/",explorer:"https://testnet.bscscan.com/",config:{chainId:"0x61",chainName:"BSC Testnet",nativeCurrency:{name:"BNB",symbol:"BNB",decimals:18},rpcUrls:["https://data-seed-prebsc-2-s3.binance.org:8545/"],blockExplorerUrls:["https://testnet.bscscan.com/"]}},{id:"OEC-Testnet",name:"OEC Testnet",chainId:"0x41",label:"OEC Testnet",url:"https://exchaintestrpc.okex.org",explorer:"https://www.oklink.com/oec-test/",config:{chainId:"0x41",chainName:"OKExChain Testnet",nativeCurrency:{name:"OKExChain Global Utility Token in testnet",symbol:"OKT",decimals:18},rpcUrls:["https://exchaintestrpc.okex.org"],blockExplorerUrls:["https://www.oklink.com/okexchain-test"]}},{id:"ETH-Mainnet",name:"ETH Mainnet",chainId:"0x1",url:"https://mainnet.infura.io/v3/a892bade64884ad6a13cf9981de659eb",explorer:"https://etherscan.io/",config:{chainId:"0x1",chainName:"ETH Mainnet",nativeCurrency:{name:"ETH",symbol:"ETH",decimals:18},rpcUrls:["https://mainnet.infura.io/v3/a892bade64884ad6a13cf9981de659eb"],blockExplorerUrls:["https://etherscan.io/"]}},{id:"BSC-Mainnet",name:"BSC Mainnet",chainId:"0x38",url:"https://bsc-dataseed.binance.org/",explorer:"https://bscscan.com/",config:{chainId:"0x38",chainName:"Binance Smart Chain",nativeCurrency:{name:"BNB",symbol:"BNB",decimals:18},rpcUrls:["https://bsc-dataseed.binance.org/"],blockExplorerUrls:["https://bscscan.com/"]}},{id:"OEC-Mainnet",name:"OEC Mainnet",chainId:"0x42",url:"https://exchainrpc.okex.org",explorer:"https://www.oklink.com/oec/",config:{chainId:"0x42",chainName:"OKExChain Mainnet",nativeCurrency:{name:"OKExChain Global Utility Token",symbol:"OKT",decimals:18},rpcUrls:["https://exchainrpc.okex.org"],blockExplorerUrls:["https://www.oklink.com/okexchain"]}}];!function(e){if(!Array.isArray(e))return void console.log("type error!");let t=[];for(let n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n])}(c.map((e=>e.name.split(" ")[0])));const h=Object.freeze({BSC_TEST:"BSC-Testnet",ETH_TEST:"ETH-Testnet",OEC_TEST:"OEC-Testnet",BSC_MAIN:"BSC-Mainnet",ETH_MAIN:"ETH-Mainnet",OEC_MAIN:"OEC-Mainnet"}),l={[h.BSC_TEST]:97,[h.ETH_TEST]:4,[h.OEC_TEST]:41,[h.BSC_MAIN]:56,[h.ETH_MAIN]:1,[h.OEC_MAIN]:42},d={[l[h.BSC_TEST]]:"https://data-seed-prebsc-2-s3.binance.org:8545/",[l[h.ETH_TEST]]:"https://ropsten.infura.io/v3/a892bade64884ad6a13cf9981de659eb",[l[h.OEC_TEST]]:"https://exchaintestrpc.okex.org",[l[h.BSC_MAIN]]:"https://bsc-dataseed.binance.org/",[l[h.ETH_MAIN]]:"https://mainnet.infura.io/v3/a892bade64884ad6a13cf9981de659eb",[l[h.OEC_TEST]]:"https://exchainrpc.okex.org"};class p extends o{constructor(){if(!window.ethereum)throw new Error("No provider exists for the current environment.");{const e=window.ethereum;super(e,new a.providers.Web3Provider(e))}}async getAddress(){try{return await this.signer.getAddress()}catch(e){if("UNSUPPORTED_OPERATION"===e.code)throw new Error("Please connect your wallet first");console.error(e)}}static getInstance(){return p.instance||(p.instance=new p),p.instance}static connectWallet(e=(()=>{})){window.ethereum.request({method:"eth_requestAccounts"}).then((t=>{e(t[0])})).catch((e=>{console.error(e.message)}))}async switchNetwork(e,t=(()=>{})){let n=await this.getAddress();if(!n)throw new Error("Please connect your wallet first");let r=Object.values(h);if(!e)throw new Error("The param cannot be empty.");if(-1===r.indexOf(e))throw new Error("The param is wrong.");let a=c.find((t=>t.id===e));try{await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:a.config.chainId}]}),t()}catch(e){4902===e.code?(await window.ethereum.request({method:"wallet_addEthereumChain",params:[a.config,n]}),t()):console.error(e)}}}class u extends o{constructor(e){super(e,new a.providers.Web3Provider(e))}disconnect(){this.originProvider.wc.killSession()}}exports.Networks=h,exports.WalletHandler=p,exports.createWalletConnect=async function(e={onSuccess:()=>{},onFail:()=>{}},t){try{let n=Object.values(h);if(!t)throw new Error("The param cannot be empty.");if(-1===n.indexOf(t))throw new Error("The param is wrong.");const r=new s.default({rpc:d,chainId:l[t]}),a=await r.enable(),i=new u(r);e.onSuccess(i,a[0])}catch(t){e.onFail(t.message)}};
