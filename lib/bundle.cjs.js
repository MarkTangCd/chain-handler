"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@walletconnect/utils"),t=require("ethereumjs-util"),r=require("ethers"),n=require("@walletconnect/web3-provider");function o(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function s(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if("default"!==r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,Object.freeze(t)}var i=s(t),a=s(r),c=o(n);const l=require("ethers");class d{constructor(e,t,r){this.web3Provider=t,this.originProvider=e,this.signer=t.getSigner(),this.type=r}async queryContract(e,t,r,...n){return new l.Contract(e,t,this.web3Provider).functions[r](...n)}async runContractTransactionFunc(e,t,r,...n){return new l.Contract(e,t,this.web3Provider.getSigner()).functions[r](...n)}listenForChanges(e,t=(()=>{})){if(!e)throw new Error("This listener item cannot be empty.");if(-1===["chainChanged","accountsChanged","disconnect"].indexOf(e))throw new Error("This listener item does not exist.");try{this.originProvider.on(e,t)}catch(e){console.log("Listen to error."),console.log(e)}}verifySignature(e,t,r){const n=function(e,t){const r=i.fromRpcSig(e),n=Buffer.from(t.replace("0x",""),"hex"),o=i.ecrecover(n,r.v,r.r,r.s);return i.bufferToHex(i.publicToAddress(o))}(e,t);return n.toLowerCase()===r.toLowerCase()}async signMessage(e,t){let r=e;return"injected"===this.type&&(r=function(e){const t=Buffer.from(e),r=i.hashPersonalMessage(t);return i.bufferToHex(r)}(e)),await this.originProvider.request({method:"eth_sign",params:[t,r]})}async personalSign(t,r){const n=e.convertUtf8ToHex(t);return this.originProvider.request({method:"personal_sign",params:[n,r],from:r})}formatUnits(e,t){return l.utils.formatUnits(e,t)}}const h=[{id:"ETH-Testnet",name:"ETH Testnet",label:"EHT Rinkeby Testnet",chainId:"0x4",url:"https://ropsten.infura.io/v3/a892bade64884ad6a13cf9981de659eb",explorer:"https://ropsten.etherscan.io/",config:{chainId:"0x4",chainName:"ETH Testnet",nativeCurrency:{name:"ETH",symbol:"ETH",decimals:18},rpcUrls:["https://ropsten.infura.io/v3/a892bade64884ad6a13cf9981de659eb"],blockExplorerUrls:["https://ropsten.etherscan.io/"]}},{id:"BSC-Testnet",name:"BSC Testnet",chainId:"0x61",label:"BSC Testnet",url:"https://data-seed-prebsc-2-s3.binance.org:8545/",explorer:"https://testnet.bscscan.com/",config:{chainId:"0x61",chainName:"BSC Testnet",nativeCurrency:{name:"BNB",symbol:"BNB",decimals:18},rpcUrls:["https://data-seed-prebsc-2-s3.binance.org:8545/"],blockExplorerUrls:["https://testnet.bscscan.com/"]}},{id:"OEC-Testnet",name:"OEC Testnet",chainId:"0x41",label:"OEC Testnet",url:"https://exchaintestrpc.okex.org",explorer:"https://www.oklink.com/oec-test/",config:{chainId:"0x41",chainName:"OKExChain Testnet",nativeCurrency:{name:"OKExChain Global Utility Token in testnet",symbol:"OKT",decimals:18},rpcUrls:["https://exchaintestrpc.okex.org"],blockExplorerUrls:["https://www.oklink.com/okexchain-test"]}},{id:"ETH-Mainnet",name:"ETH Mainnet",chainId:"0x1",url:"https://mainnet.infura.io/v3/a892bade64884ad6a13cf9981de659eb",explorer:"https://etherscan.io/",config:{chainId:"0x1",chainName:"ETH Mainnet",nativeCurrency:{name:"ETH",symbol:"ETH",decimals:18},rpcUrls:["https://mainnet.infura.io/v3/a892bade64884ad6a13cf9981de659eb"],blockExplorerUrls:["https://etherscan.io/"]}},{id:"BSC-Mainnet",name:"BSC Mainnet",chainId:"0x38",url:"https://bsc-dataseed.binance.org/",explorer:"https://bscscan.com/",config:{chainId:"0x38",chainName:"Binance Smart Chain",nativeCurrency:{name:"BNB",symbol:"BNB",decimals:18},rpcUrls:["https://bsc-dataseed.binance.org/"],blockExplorerUrls:["https://bscscan.com/"]}},{id:"OEC-Mainnet",name:"OEC Mainnet",chainId:"0x42",url:"https://exchainrpc.okex.org",explorer:"https://www.oklink.com/oec/",config:{chainId:"0x42",chainName:"OKExChain Mainnet",nativeCurrency:{name:"OKExChain Global Utility Token",symbol:"OKT",decimals:18},rpcUrls:["https://exchainrpc.okex.org"],blockExplorerUrls:["https://www.oklink.com/okexchain"]}}];!function(e){if(!Array.isArray(e))return void console.log("type error!");let t=[];for(let r=0;r<e.length;r++)-1===t.indexOf(e[r])&&t.push(e[r])}(h.map((e=>e.name.split(" ")[0])));const u=Object.freeze({BSC_TEST:"BSC-Testnet",ETH_TEST:"ETH-Testnet",OEC_TEST:"OEC-Testnet",BSC_MAIN:"BSC-Mainnet",ETH_MAIN:"ETH-Mainnet",OEC_MAIN:"OEC-Mainnet"}),p={[u.BSC_TEST]:97,[u.ETH_TEST]:4,[u.OEC_TEST]:41,[u.BSC_MAIN]:56,[u.ETH_MAIN]:1,[u.OEC_MAIN]:42},w={[p[u.BSC_TEST]]:"https://data-seed-prebsc-2-s3.binance.org:8545/",[p[u.ETH_TEST]]:"https://ropsten.infura.io/v3/a892bade64884ad6a13cf9981de659eb",[p[u.OEC_TEST]]:"https://exchaintestrpc.okex.org",[p[u.BSC_MAIN]]:"https://bsc-dataseed.binance.org/",[p[u.ETH_MAIN]]:"https://mainnet.infura.io/v3/a892bade64884ad6a13cf9981de659eb",[p[u.OEC_TEST]]:"https://exchainrpc.okex.org"};class f extends d{constructor(e){super(e,new a.providers.Web3Provider(e),"injected")}async getAddress(){try{return await this.signer.getAddress()}catch(e){if("UNSUPPORTED_OPERATION"===e.code)throw new Error("Please connect your wallet first");console.error(e)}}static connectWallet(e=(()=>{})){window.ethereum.request({method:"eth_requestAccounts"}).then((t=>{e(t[0])})).catch((e=>{console.error(e.message)}))}async switchNetwork(e,t=(()=>{})){let r=await this.getAddress();if(!r)throw new Error("Please connect your wallet first");let n=Object.values(u);if(!e)throw new Error("The param cannot be empty.");if(-1===n.indexOf(e))throw new Error("The param is wrong.");let o=h.find((t=>t.id===e));try{await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:o.config.chainId}]}),t()}catch(e){4902===e.code?(await window.ethereum.request({method:"wallet_addEthereumChain",params:[o.config,r]}),t()):console.error(e)}}}class m extends d{constructor(e){super(e,new a.providers.Web3Provider(e),"walletconnect")}disconnect(){this.originProvider.wc.killSession()}}exports.ConnectToInjected=async()=>{let e=null;if(void 0!==window.ethereum){e=window.ethereum;try{await e.request({method:"eth_requestAccounts"})}catch(e){throw new Error("User Rejected")}}else if(window.web3)e=window.web3.currentProvider;else{if(!window.celo)throw new Error("No Web3 Provider found");e=window.celo}return new f(e)},exports.ConnectToWalletConnect=e=>new Promise((async(t,r)=>{let n,o="https://bridge.walletconnect.org",s=!0,i="",a=w,l=p[u.BSC_MAIN];e&&(o=e.bridge||o,s=void 0!==e.qrcode?e.qrcode:s,i=e.infuraId||"",l=e.network?p[e.network]:l,n=e.qrcodeModalOptions||void 0);const d=new c.default({bridge:o,qrcode:s,infuraId:i,rpc:a,chainId:l,qrcodeModalOptions:n});try{const e=await d.enable();t({walletConnector:new m(d),accounts:e})}catch(e){r(e)}})),exports.Networks=u;
